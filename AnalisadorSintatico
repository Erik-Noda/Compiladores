package AnalisadorLexico;

import java.util.ArrayList;

public class AnalisadorSintatico {
    TipoToken lookahead;
    ArrayList<Token>lista;
    int indice = 0;
    Token tokenFinal = new Token("$",TipoToken.TokenFinal,-1);
    
    public AnalisadorSintatico(ArrayList<Token>lista) {
        this.lista = lista;
        this.lookahead = lista.get(indice).padrao;
    }
    
    public void match(TipoToken t){
        if(lookahead==t){
            System.out.println(lista.get(indice).linha+ " " +lookahead + "รง");
            indice++;
            lookahead = lista.get(indice).padrao;
        }else{
            
            System.out.println("#ERRO sintatico, linha " + lista.get(indice).linha);
            System.exit(0);
        }
    }
    
    public void P(){
        
        
        if(lookahead== TipoToken.IniDelim){
            match(TipoToken.IniDelim);
            match(TipoToken.PCDec);
            
            match(TipoToken.FimDelim);
            LD();
            match(TipoToken.IniDelim);
            match(TipoToken.PCProg);
            match(TipoToken.FimDelim);
            LC();
            cifrao();
        }
        
    }
    public void cifrao(){
        if(lookahead==TipoToken.TokenFinal){
            System.out.println("SUCESSO");
        }
    }
    
    public void LD(){
        D();
        DLinha();
    }
    
    public void D(){
        match(TipoToken.Var);
        match(TipoToken.IniDelim);
        TV();
        match(TipoToken.FimDelim);
    }
    
    public void DLinha(){
        if(lookahead == TipoToken.Var){
            LD();
        }
    }
    
    public void TV(){
        if(lookahead==TipoToken.PCInt){
            match(TipoToken.PCInt);
        }else if(lookahead==TipoToken.PCReal){
            match(TipoToken.PCReal);
        }else{
            System.out.println("ERRO sintatico, linha "+ lista.get(indice).linha);
            System.exit(0);
        }
    }
    
    public void EA(){
       TA();        
       EALinha();
    }
    
    public void EALinha(){
        if(lookahead==TipoToken.OpAritSoma){
            match(TipoToken.OpAritSoma);
            TA();
            EALinha();
        }else if(lookahead==TipoToken.OpAritSub){
            match(TipoToken.OpAritSub);
            TA();
            EALinha();
        }
    }
    
    public void TA(){
        FA();
        TALinha();
    }
    
    public void TALinha(){
        if(lookahead==TipoToken.OpAritMult){
            match(TipoToken.OpAritMult);
            FA();
            TALinha();
        }else if(lookahead==TipoToken.OpAritDiv){
            match(TipoToken.OpAritDiv);
            FA();
            TALinha();
        }
    }
    
    public void FA(){
        if(lookahead==TipoToken.NumInt) {
            match(TipoToken.NumInt);
            return;
        }else if(lookahead==TipoToken.NumReal) {
            match(TipoToken.NumReal);
            return;
        }else if(lookahead==TipoToken.Var) {
            match(TipoToken.Var);
            return;
        }else if(lookahead==TipoToken.AbrePar){
            match(TipoToken.AbrePar);
            EA();
            match(TipoToken.FechaPar);
            return;
        }else{
            System.out.println("ERRO sintatico, linha "+ lista.get(indice).linha);
            System.exit(0);
        }
    }
    
    public void ER(){
        TR();
        ERLinha();
    }
    
    public void ERLinha(){
        if(lookahead==TipoToken.OpBoolE || lookahead==TipoToken.OpBoolOu){
            OB();
            TR();
            ERLinha();
        }
    }
    
    public void TR(){
        if(lookahead==TipoToken.Var){
            EA();
            
            if(lookahead == TipoToken.OpRelIgual){
            match(TipoToken.OpRelIgual);
            }else if(lookahead == TipoToken.OpRelDif){
            match(TipoToken.OpRelDif);
            }else if(lookahead == TipoToken.OpRelMaior){
            match(TipoToken.OpRelMaior);
            }else if(lookahead == TipoToken.OpRelMaiorIgual){
            match(TipoToken.OpRelMaiorIgual);
            }else if(lookahead == TipoToken.OpRelMenor){
            match(TipoToken.OpRelMenor);
            }else if(lookahead == TipoToken.OpRelMenorIgual){
            match(TipoToken.OpRelMenorIgual);
            }

            EA();
            
        }else if(lookahead==TipoToken.AbrePar){
            match(TipoToken.AbrePar);
            ER();
            match(TipoToken.FechaPar);
        }else{
            System.out.println("ERRO sintatico, linha "+ lista.get(indice).linha);
            System.exit(0);
        }
    }
    
    public void OB(){
        if(lookahead==TipoToken.OpBoolOu){
            match(TipoToken.OpBoolOu);
        }else if(lookahead==TipoToken.OpBoolE){
            match(TipoToken.OpBoolE);
        }else{
            System.out.println("ERRO sintatico, linha "+ lista.get(indice).linha);
            System.exit(0);
        }
    }
    
    public void LC(){
        C();
        LCLinha();
        
    }
    
    public void LCLinha(){
        if(lookahead==TipoToken.Var){
            LC();
        }else if (lookahead==TipoToken.PCLer) {
            LC();
        }else if (lookahead==TipoToken.PCImprimir) {
            LC();
        }else if (lookahead==TipoToken.PCSe) {
            LC();
        }else if (lookahead==TipoToken.PCEnqto) {
            LC();
        }
    }
    
    public void C(){
        if(lookahead==TipoToken.Var || lookahead ==TipoToken.Atrib){
            CA();
        }else if (lookahead==TipoToken.PCLer) {
            CE();  
        }else if (lookahead==TipoToken.PCImprimir) {
            CS();
        }else if (lookahead==TipoToken.PCSe) {
            CC();
        }else if (lookahead==TipoToken.PCEnqto) {
            CR();
        }else if (lookahead==TipoToken.PCIni) {
            SA();
        }else{
            System.out.println("ERRO sintatico, linha "+ lista.get(indice).linha);
            System.exit(0);
        }
    }
    
    public void CA(){
        match(TipoToken.Var);
        match(TipoToken.Atrib);
        EA();
    }
    public void CE(){
        match(TipoToken.PCLer);
        match(TipoToken.Var);
    }
    public void CS(){
        match(TipoToken.PCImprimir);
        
        if(lookahead == TipoToken.Var){
            match(TipoToken.Var);
        }else if(lookahead == TipoToken.Cadeia){
            match(TipoToken.Cadeia);
        }else{
            System.out.println("ERRO sintatico, linha "+ lista.get(indice).linha);
            System.exit(0);
        }
    }
    
    public void CC(){
        match(TipoToken.PCSe);
        
        ER();
        match(TipoToken.PCEntao);
        C();
        CCLinha();
    }
    
    public void CCLinha(){
        if(lookahead == TipoToken.PCSenao){
            match(TipoToken.PCSenao);
            C();    
        }
    }
    public void CR(){
        match(TipoToken.PCEnqto);
        ER();
        match(TipoToken.PCEntao);
        C();
    }
    public void SA(){
        match(TipoToken.PCIni);
        LC();
        match(TipoToken.PCFim);
    }
}
